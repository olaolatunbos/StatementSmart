name: Terraform Plan
on:
  pull_request:
    branches:
      - main
    paths:
      - "terraform/**"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_AZUREAD: true

jobs:
  terraform-plan:
    defaults:
      run:
        working-directory: ./terraform
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="resource_group_name=${{secrets.RESOURCE_GROUP_NAME}}" -backend-config="storage_account_name=${{secrets.STORAGE_ACCOUNT_NAME}}" -backend-config="container_name=${{secrets.STORAGE_ACCOUNT_CONTAINER_NAME}}" -backend-config="key=terraform.tfstate"

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Run Checkov Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          soft_fail: true
        env:
          CHECKOV_SKIP_UPDATE: true

      - name: Write terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          ${{ secrets.PROD_TFVARS }}
          EOF

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -var-file="terraform.tfvars" -out main.tfplan
          terraform show -no-color main.tfplan > plan.txt

      - name: Upload Plan
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./terraform/main.tfplan

      - name: Set PLAN_PROD environment variable from plan.txt
        if: github.event_name == 'pull_request'
        run: |
          echo "PLAN_PROD<<EOF" >> $GITHUB_ENV
          cat plan.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Add Plan To Pull Request
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            Terraform Prod Plan Output:
            ```
            ${{ env.PLAN_PROD }}
            ```
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
